% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/svgtools.R
\name{linesSymbols}
\alias{linesSymbols}
\title{Passt Linien- und Symboldiagramme an}
\usage{
linesSymbols(
  svg,
  frame_name,
  group_name,
  scale_real,
  values,
  alignment = "vertical",
  has_lines = TRUE,
  symbol_type = NULL,
  ...
)
}
\arguments{
\item{svg}{SVG als XML document}

\item{frame_name}{Name des Grafikrahmens.}

\item{group_name}{Name der Gruppe mit den zu bearbeitenden Symbolen (und optional Verbindungslinien).}

\item{scale_real}{Unter- und Obergrenze des dargestellten Wertebereichs (bspw. c(0,100))}

\item{values}{Dataframe bzw. Vektor mit den Werten}

\item{alignment}{Ausrichtungsytyp der Symbole/Linien. Entweder "horizontal" (x-Werte anpassen) oder "vertical" (y-Werte anpassen) (Default: vertical).}

\item{has_lines}{Sind Linien vorhanden? (Default = TRUE)}

\item{symbol_type}{Typ der Symbolgruppe, die angepasst werden soll: c("circle","rect","polygon","linegroup"). (Default: NULL = nur Linie).}

\item{...}{Argumente fuer Subfunktionen}
}
\value{
adaptiertes SVG als XML document
}
\description{
Passt die Symbole (und Lininen) in der SVG-Datei vorgefertigtes Symboldiagramm horizontal oder vertikal an. Vorbereitung: Linien und Symbolelemente (siehe Details) sind im SVG zu gruppieren. Die Gruppe ist zu benennen.
}
\details{
Die Linien- und Symbolelemente werden anhand ihrer x/y-Koordinaten von links nach rechts (aufsteigende x-Koordinate) bzw. oben nach unten (aufsteigende y-Koordinate) vorab sortiert und die Datenwerte entsprechend zugewiesen.\cr\cr
Symboltyp "circle": Kreiselemente vom Typ "circle" im SVG. Passt die Attribute cx und cy an.\cr
Symboltyp "rect": Rechteckelemente vom Typ "recht" im SVG. Passt die Attribute
}
